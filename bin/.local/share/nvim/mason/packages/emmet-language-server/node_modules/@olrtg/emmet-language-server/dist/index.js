#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vscode_languageserver_textdocument_1 = require("vscode-languageserver-textdocument");
const node_1 = require("vscode-languageserver/node");
const emmet_helper_1 = require("@vscode/emmet-helper");
const connection = (0, node_1.createConnection)(node_1.ProposedFeatures.all);
const documents = new node_1.TextDocuments(vscode_languageserver_textdocument_1.TextDocument);
let globalConfig = {};
connection.onInitialize(params => {
    globalConfig = params.initializationOptions || {};
    return {
        capabilities: {
            textDocumentSync: node_1.TextDocumentSyncKind.Incremental,
            completionProvider: {
                resolveProvider: false,
                triggerCharacters: [
                    // NOTE: For cases where is valid to expand emmet abbreviations with
                    // special characters
                    '!',
                    ':',
                    '>',
                    '+',
                    '^',
                    '*',
                    ')',
                    '.',
                    ']',
                    '@',
                    '}',
                    // NOTE: For cases where completion is not triggered by typing a
                    // single character
                    'a',
                    'b',
                    'c',
                    'd',
                    'e',
                    'f',
                    'g',
                    'h',
                    'i',
                    'j',
                    'k',
                    'l',
                    'm',
                    'n',
                    'o',
                    'p',
                    'q',
                    'r',
                    's',
                    't',
                    'u',
                    'v',
                    'w',
                    'x',
                    'y',
                    'z',
                    // NOTE: For cases where completion is not triggered by typing a
                    // single character or because numbers cannot be used to trigger
                    // completion
                    '0',
                    '1',
                    '2',
                    '3',
                    '4',
                    '5',
                    '6',
                    '7',
                    '8',
                    '9',
                ],
            },
        },
    };
});
connection.onCompletion(textDocumentPosition => {
    var _a;
    const document = documents.get(textDocumentPosition.textDocument.uri);
    if (!document) {
        return;
    }
    const languageId = document.languageId;
    const syntax = (_a = (0, emmet_helper_1.getEmmetMode)(languageId)) !== null && _a !== void 0 ? _a : 'html';
    if (!syntax) {
        return;
    }
    const position = textDocumentPosition.position;
    return (0, emmet_helper_1.doComplete)(document, position, syntax, globalConfig);
});
documents.listen(connection);
connection.listen();
